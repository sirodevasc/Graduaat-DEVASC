RESTCONF & CURL 

This document shows examples of curl restconf operations with a virtual cisco ios xe router
Task: Translate the curl commands into python scripts

Preparation Part 1

-1-
Verify  RESTCONF server is up and running with a quick curl test: XML
curl -k https://192.168.56.107/restconf/ -u 'cisco:cisco123!'

Output/ response
<restconf xmlns="urn:ietf:params:xml:ns:yang:ietf-restconf">
  <data/>
  <operations/>
  <yang-library-version>2016-06-21</yang-library-version>
</restconf>

-2-
Verify  RESTCONF server is up and running with a quick curl test: JSON
curl -H "Accept: application/yang-data+json" -k https://192.168.56.107/restconf/ -u 'cisco:cisco123!'

Output/ response
{"ietf-restconf:restconf":{"data":{},"operations":{},"yang-library-version":"2016-06-21"}}

-3-
Retrieve the full running configuration /XML
curl -k https://192.168.56.107/restconf/data/Cisco-IOS-XE-native:native/ -u 'cisco:cisco123!'

Partial output/response
<native xmlns="http://cisco.com/ns/yang/Cisco-IOS-XE-native"  xmlns:ios="http://cisco.com/ns/yang/Cisco-IOS-XE-native">
  <version>16.9</version>
...
<hostname>CSR1kv</hostname>
<username>
  <name>cisco</name>
  <privilege>15</privilege>
  <password>
    <encryption>0</encryption>
    <password>cisco123</password>
  </password>
</username>
...

  
-4-
Retrieve the full running configuration /JSON
curl -H "Accept: application/yang-data+json" -k https://192.168.56.107/restconf/data/Cisco-IOS-XE-native:native/ -u 'cisco:cisco123!'

Partial output/ response

{
  "Cisco-IOS-XE-native:native": {
    "version": "16.9",
    "boot-start-marker": [null],
    "boot-end-marker": [null],
    "banner": {
      "motd": {
        "banner": "^C"
      }
    },
...
"hostname": "CSR1kv",
    "username": [
      {
        "name": "cisco",
        "privilege": 15,
        "password": {
          "encryption": "0",
          "password": "cisco123"
        }
      }
...

-5- 
Retrieve the interface configuration of "GigabitEthernet 1" /XML
curl -k https://192.168.56.107/restconf/data/Cisco-IOS-XE-native:native/interface/GigabitEthernet=1 -u 'cisco:cisco123!'

-6- 
Retrieve the interface configuration of "GigabitEthernet 1" /JSON
curl -H "Accept: application/yang-data+json" -k https://192.168.56.107/restconf/data/Cisco-IOS-XE-native:native/interface/GigabitEthernet=1 -u 'cisco:cisco123!'

Output/ response

{
  "Cisco-IOS-XE-native:GigabitEthernet": {
    "name": "1",
    "description": "VBox",
    "ip": {
      "address": {
        "dhcp": {
        }
      }
    },
    "mop": {
      "enabled": false,
      "sysid": false
    },
    "Cisco-IOS-XE-ethernet:negotiation": {
      "auto": true
    }
  }
}

---
Preparation Part 2

With Cisco IOS software, it is possible to send log messages to monitor sessions 
- monitor sessions are interactive management sessions in which the EXEC command terminal monitor has been issued.

Event logging provides  visibility into the operation of a Cisco IOS device and the network into which it is deployed.

Example: Set terminal line logging parameters
Configure logging severity
To enable the device to log messages to the monitor (terminal line), 
use the logging monitor command. 
To disable monitor log messages, 
use the no form of this command.

# conf t
# logging monitor  
# logging monitor <severity-level>
# end

Logging monitor & severity-level
-- Syslog logging: enabled
-- Trap logging: notifications
-- Log buffer: 4096 bytes


EXAMPLEs: CURL COMMANDS USING RESTCONF TO CONFIGURE AND TO MONITOR

-1- CURL COMMAND - OPTIONS

Command/ request
curl -i -k -X "OPTIONS" \
"https://192.168.56.107:443/restconf/data/Cisco-IOS-XE-native:native/logging/monitor/severity" \
-H 'Accept: application/yang-data+json' \
-u 'cisco:cisco123!'

Output/ response
HTTP/1.1 200 OK
Server: nginx
Date: Sun, 22 Nov 2020 20:19:35 GMT
Content-Type: text/html
Content-Length: 0
Connection: keep-alive
Allow: DELETE, GET, HEAD, PATCH, POST, PUT, OPTIONS
Cache-Control: private, no-cache, must-revalidate, proxy-revalidate
Accept-Patch: application/yang-data+xml, application/yang-data+json
Pragma: no-cache


-2- CURL COMMAND - POST
=> Configure loggin monitor with severity level "alerts"
Remark => you may have to enable "logging monitor" on the device first (through cli)

# conf t
# logging monitor
# end

Command/ request
curl -i -k -X "POST" "https://192.168.56.107:443/restconf/data/Cisco-IOS-XE-native:native/logging/monitor" \
-H 'Content-Type: application/yang-data+json' \
-H 'Accept: application/yang-data+json' \
-u 'cisco:cisco123!' \
-d $'{
       "severity": "alerts"
}'

Output/ response
HTTP/1.1 201 Created
Server: nginx
Date: Sun, 22 Nov 2020 11:20:37 GMT
Content-Type: text/html
Content-Length: 0
Location: https://192.168.56.107/restconf/data/Cisco-IOS-XE-native:native/logging/monitor/severity
Connection: keep-alive
Last-Modified: Sun, 22 Nov 2020 11:20:36 GMT
Cache-Control: private, no-cache, must-revalidate, proxy-revalidate
Etag: 1606-44036-936119
Pragma: no-cache


-3- CURL COMMAND - PUT
=> Change the severity level to warnings

Command/ request
curl -i -k -X "PUT" "https://192.168.56.107:443/restconf/data/Cisco-IOS-XE-native:native/logging/monitor/severity" \
-H 'Content-Type: application/yang-data+json' \
-H 'Accept: application/yang-data+json' \
-u 'cisco:cisco123!' \
-d $'{
       "severity": "warnings"
}'

Output/ response
HTTP/1.1 204 No Content
Server: nginx
Date: Sun, 22 Nov 2020 11:21:29 GMT
Content-Type: text/html
Content-Length: 0
Connection: keep-alive
Last-Modified: Sun, 22 Nov 2020 11:21:28 GMT
Cache-Control: private, no-cache, must-revalidate, proxy-revalidate
Etag: 1606-44088-916333
Pragma: no-cache


-4- CURL COMMAND - PATCH
=> Change the severity level to informational

Command/ request
curl -i -k -X "PATCH" "https://192.168.56.107:443/restconf/data/Cisco-IOS-XE-native:native" \
-H 'Content-Type: application/yang-data+json' \
-H 'Accept: application/yang-data+json' \
-u 'cisco:cisco123!' \
-d $'{
"native": {
"logging": {
"monitor": {
"severity": "informational"
}
}
}
}'

Output/ response
HTTP/1.1 204 No Content
Server: nginx
Date: Sun, 22 Nov 2020 20:05:15 GMT
Content-Type: text/html
Content-Length: 0
Connection: keep-alive
Last-Modified: Sun, 22 Nov 2020 20:05:15 GMT
Cache-Control: private, no-cache, must-revalidate, proxy-revalidate
Etag: 1606-75515-266750
Pragma: no-cache

Other curl examples

GET command/ request
curl -H "Accept: application/yang-data+json" -k -X "GET" "https://192.168.56.107/restconf/data/Cisco-IOS-XE-native:native/logging/monitor/severity" -u 'cisco:cisco123!'

output/ response
{
  "Cisco-IOS-XE-native:severity": "alerts"
}

DELETE command/ request
curl -H "Accept: application/yang-data+json" -k -X "DELETE" "https://192.168.56.107/restconf/data/Cisco-IOS-XE-native:native/logging/monitor/severity" -u 'cisco:cisco123!'



--------
SOURCES

RESTCONF Protocol
URL: 
https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/prog/configuration/169/b_169_programmability_cg/restconf_programmable_interface.pdf#page9

More examples curl and python
RESTCONF Tutorial - Everything you need to know about RESTCONF in 2020
URL:
https://ultraconfig.com.au/blog/restconf-tutorial-everything-you-need-to-know-about-restconf-in-2020/
